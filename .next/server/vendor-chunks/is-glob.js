/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/is-glob";
exports.ids = ["vendor-chunks/is-glob"];
exports.modules = {

/***/ "(rsc)/./node_modules/is-glob/index.js":
/*!***************************************!*\
  !*** ./node_modules/is-glob/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */ var isExtglob = __webpack_require__(/*! is-extglob */ \"(rsc)/./node_modules/is-extglob/index.js\");\nvar chars = {\n    \"{\": \"}\",\n    \"(\": \")\",\n    \"[\": \"]\"\n};\nvar strictCheck = function(str) {\n    if (str[0] === \"!\") {\n        return true;\n    }\n    var index = 0;\n    var pipeIndex = -2;\n    var closeSquareIndex = -2;\n    var closeCurlyIndex = -2;\n    var closeParenIndex = -2;\n    var backSlashIndex = -2;\n    while(index < str.length){\n        if (str[index] === \"*\") {\n            return true;\n        }\n        if (str[index + 1] === \"?\" && /[\\].+)]/.test(str[index])) {\n            return true;\n        }\n        if (closeSquareIndex !== -1 && str[index] === \"[\" && str[index + 1] !== \"]\") {\n            if (closeSquareIndex < index) {\n                closeSquareIndex = str.indexOf(\"]\", index);\n            }\n            if (closeSquareIndex > index) {\n                if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n                    return true;\n                }\n                backSlashIndex = str.indexOf(\"\\\\\", index);\n                if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n                    return true;\n                }\n            }\n        }\n        if (closeCurlyIndex !== -1 && str[index] === \"{\" && str[index + 1] !== \"}\") {\n            closeCurlyIndex = str.indexOf(\"}\", index);\n            if (closeCurlyIndex > index) {\n                backSlashIndex = str.indexOf(\"\\\\\", index);\n                if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n                    return true;\n                }\n            }\n        }\n        if (closeParenIndex !== -1 && str[index] === \"(\" && str[index + 1] === \"?\" && /[:!=]/.test(str[index + 2]) && str[index + 3] !== \")\") {\n            closeParenIndex = str.indexOf(\")\", index);\n            if (closeParenIndex > index) {\n                backSlashIndex = str.indexOf(\"\\\\\", index);\n                if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n                    return true;\n                }\n            }\n        }\n        if (pipeIndex !== -1 && str[index] === \"(\" && str[index + 1] !== \"|\") {\n            if (pipeIndex < index) {\n                pipeIndex = str.indexOf(\"|\", index);\n            }\n            if (pipeIndex !== -1 && str[pipeIndex + 1] !== \")\") {\n                closeParenIndex = str.indexOf(\")\", pipeIndex);\n                if (closeParenIndex > pipeIndex) {\n                    backSlashIndex = str.indexOf(\"\\\\\", pipeIndex);\n                    if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n                        return true;\n                    }\n                }\n            }\n        }\n        if (str[index] === \"\\\\\") {\n            var open = str[index + 1];\n            index += 2;\n            var close = chars[open];\n            if (close) {\n                var n = str.indexOf(close, index);\n                if (n !== -1) {\n                    index = n + 1;\n                }\n            }\n            if (str[index] === \"!\") {\n                return true;\n            }\n        } else {\n            index++;\n        }\n    }\n    return false;\n};\nvar relaxedCheck = function(str) {\n    if (str[0] === \"!\") {\n        return true;\n    }\n    var index = 0;\n    while(index < str.length){\n        if (/[*?{}()[\\]]/.test(str[index])) {\n            return true;\n        }\n        if (str[index] === \"\\\\\") {\n            var open = str[index + 1];\n            index += 2;\n            var close = chars[open];\n            if (close) {\n                var n = str.indexOf(close, index);\n                if (n !== -1) {\n                    index = n + 1;\n                }\n            }\n            if (str[index] === \"!\") {\n                return true;\n            }\n        } else {\n            index++;\n        }\n    }\n    return false;\n};\nmodule.exports = function isGlob(str, options) {\n    if (typeof str !== \"string\" || str === \"\") {\n        return false;\n    }\n    if (isExtglob(str)) {\n        return true;\n    }\n    var check = strictCheck;\n    // optionally relax check\n    if (options && options.strict === false) {\n        check = relaxedCheck;\n    }\n    return check(str);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/is-glob/index.js\n");

/***/ })

};
;